--- old/src/vte/vteterminal.h
+++ new/src/vte/vteterminal.h
@@ -193,6 +193,11 @@
 _VTE_PUBLIC
 void vte_terminal_unselect_all(VteTerminal *terminal) _VTE_GNUC_NONNULL(1);
 _VTE_PUBLIC
+gboolean vte_terminal_get_selection_block_mode(VteTerminal *terminal) _VTE_GNUC_NONNULL(1);
+_VTE_PUBLIC
+void vte_terminal_set_selection_block_mode(VteTerminal *terminal,
+                                            gboolean block_mode) _VTE_GNUC_NONNULL(1);
+_VTE_PUBLIC
 void vte_terminal_select_text(VteTerminal *terminal, long start_col, long start_row,
 			      long end_col, long end_row) _VTE_GNUC_NONNULL(1);
 /* By-word selection */
--- old/src/vtegtk.cc
+++ new/src/vtegtk.cc
@@ -2594,6 +2594,31 @@
         IMPL(terminal)->deselect_all();
 }
 /**
+ * vte_terminal_get_selection_block_mode:
+ * @terminal: a #VteTerminal
+ *
+ * Checks whether or not block selection is enabled.
+ *
+ * Returns: %TRUE if block selection is enabled, %FALSE if not
+ */
+
+gboolean vte_terminal_get_selection_block_mode(VteTerminal *terminal) {
+        g_return_val_if_fail(VTE_IS_TERMINAL(terminal), FALSE);
+	return IMPL(terminal)->m_selection_block_mode;
+}
+/**
+ * vte_terminal_set_selection_block_mode:
+ * @terminal: a #VteTerminal
+ * @block_mode: whether block selection is enabled
+ *
+ * Sets whether or not block selection is enabled.
+ */
+void
+vte_terminal_set_selection_block_mode(VteTerminal *terminal, gboolean block_mode) {
+	g_return_if_fail (VTE_IS_TERMINAL (terminal));
+	IMPL(terminal)->m_selection_block_mode = block_mode;
+}
+/**
  * vte_terminal_select_text:
  * @terminal: a #VteTerminal
  * @start_col: the starting column for the selection
