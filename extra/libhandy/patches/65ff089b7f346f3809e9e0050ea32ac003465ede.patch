Upstream: Yes
From 65ff089b7f346f3809e9e0050ea32ac003465ede Mon Sep 17 00:00:00 2001
From: James Westman <james@flyingpimonster.net>
Date: Wed, 23 Sep 2020 13:14:07 -0500
Subject: [PATCH] glade: Fix macro renamed in GladeUI 3.37

Glade 3.37 renamed the macro GWA_GET_CLASS to
GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS [1]. This commit switches to use the new
macro name, and for older versions of Glade, defines the new name as the old
one for compatibility.

Fixes #335 and obsoletes !607.

[1]: https://gitlab.gnome.org/GNOME/glade/-/commit/bb626dd41d93c92b587b37f03d295356e39a7d04
---
 glade/glade-hdy-carousel.c           | 14 +++++++-------
 glade/glade-hdy-expander-row.c       |  4 ++--
 glade/glade-hdy-header-bar.c         | 20 ++++++++++----------
 glade/glade-hdy-header-group.c       |  6 +++---
 glade/glade-hdy-leaflet.c            | 14 +++++++-------
 glade/glade-hdy-preferences-page.c   |  6 +++---
 glade/glade-hdy-preferences-window.c |  6 +++---
 glade/glade-hdy-swipe-group.c        |  6 +++---
 glade/glade-hdy-utils.h              |  8 ++++++++
 9 files changed, 46 insertions(+), 38 deletions(-)

diff --git a/glade/glade-hdy-carousel.c b/glade/glade-hdy-carousel.c
index c06a4e43..6abfd205 100644
--- a/glade/glade-hdy-carousel.c
+++ b/glade/glade-hdy-carousel.c
@@ -203,7 +203,7 @@ glade_hdy_carousel_child_action_activate (GladeWidgetAdaptor *adaptor,
 
     glade_command_pop_group ();
   } else
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_action_activate (adaptor,
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_action_activate (adaptor,
                                                                container,
                                                                object,
                                                                action_path);
@@ -266,7 +266,7 @@ glade_hdy_carousel_set_property (GladeWidgetAdaptor *adaptor,
   else if (!strcmp (id, "page"))
     set_page (object, value);
   else {
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->set_property (adaptor, object, id, value);
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->set_property (adaptor, object, id, value);
   }
 }
 
@@ -283,7 +283,7 @@ glade_hdy_carousel_get_property (GladeWidgetAdaptor *adaptor,
     g_value_reset (value);
     g_value_set_int (value, hdy_carousel_get_page (HDY_CAROUSEL (object)));
   } else {
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->get_property (adaptor, object, id, value);
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->get_property (adaptor, object, id, value);
   }
 }
 
@@ -321,8 +321,8 @@ glade_hdy_carousel_verify_property (GladeWidgetAdaptor *adaptor,
     return glade_hdy_carousel_verify_n_pages (object, value);
   else if (!strcmp (id, "page"))
     return glade_hdy_carousel_verify_page (object, value);
-  else if (GWA_GET_CLASS (GTK_TYPE_CONTAINER)->verify_property)
-    return GWA_GET_CLASS (GTK_TYPE_CONTAINER)->verify_property (adaptor, object,
+  else if (GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->verify_property)
+    return GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->verify_property (adaptor, object,
                                                                 id, value);
 
   return TRUE;
@@ -430,7 +430,7 @@ glade_hdy_carousel_get_child_property (GladeWidgetAdaptor *adaptor,
     g_value_set_int (value, glade_hdy_get_child_index (GTK_CONTAINER (container),
                                                        GTK_WIDGET (child)));
   else
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_get_property (adaptor,
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_get_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
@@ -451,7 +451,7 @@ glade_hdy_carousel_set_child_property (GladeWidgetAdaptor *adaptor,
 
     glade_hdy_sync_child_positions (GTK_CONTAINER (container));
   } else {
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
diff --git a/glade/glade-hdy-expander-row.c b/glade/glade-hdy-expander-row.c
index d1a2ccc0..669e52ac 100644
--- a/glade/glade-hdy-expander-row.c
+++ b/glade/glade-hdy-expander-row.c
@@ -35,7 +35,7 @@ glade_hdy_expander_row_get_child_property (GladeWidgetAdaptor *adaptor,
     g_value_set_int (value, glade_hdy_get_child_index (GTK_CONTAINER (container),
                                                        GTK_WIDGET (child)));
   else
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_get_property (adaptor,
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_get_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
@@ -54,7 +54,7 @@ glade_hdy_expander_row_set_child_property (GladeWidgetAdaptor *adaptor,
                              GTK_WIDGET (child),
                              g_value_get_int (value));
   else
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
diff --git a/glade/glade-hdy-header-bar.c b/glade/glade-hdy-header-bar.c
index 12b7afe0..efac46a5 100644
--- a/glade/glade-hdy-header-bar.c
+++ b/glade/glade-hdy-header-bar.c
@@ -124,7 +124,7 @@ glade_hdy_header_bar_action_activate (GladeWidgetAdaptor *adaptor,
 
     glade_command_pop_group ();
   } else {
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->action_activate (adaptor,
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->action_activate (adaptor,
                                                          object,
                                                          action_path);
   }
@@ -159,7 +159,7 @@ glade_hdy_header_bar_child_action_activate (GladeWidgetAdaptor *adaptor,
 
     glade_command_pop_group ();
   } else {
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_action_activate (adaptor,
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_action_activate (adaptor,
                                                                container,
                                                                object,
                                                                action_path);
@@ -179,7 +179,7 @@ glade_hdy_header_bar_get_property (GladeWidgetAdaptor *adaptor,
     g_value_reset (value);
     g_value_set_int (value, get_n_children (object));
   } else {
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->get_property (adaptor, object, id, value);
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->get_property (adaptor, object, id, value);
   }
 }
 
@@ -291,7 +291,7 @@ glade_hdy_header_bar_set_property (GladeWidgetAdaptor *adaptor,
   } else if (!strcmp (id, "size")) {
     set_size (object, value);
   } else {
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->set_property (adaptor, object, id, value);
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->set_property (adaptor, object, id, value);
   }
 }
 
@@ -316,7 +316,7 @@ glade_hdy_header_bar_add_child (GladeWidgetAdaptor *adaptor,
     return;
   }
 
-  GWA_GET_CLASS (GTK_TYPE_CONTAINER)->add (adaptor, parent, child);
+  GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->add (adaptor, parent, child);
 
   gbox = glade_widget_get_from_gobject (parent);
   if (!glade_widget_superuser ()) {
@@ -380,7 +380,7 @@ glade_hdy_header_bar_replace_child (GladeWidgetAdaptor *adaptor,
 
   g_object_set_data (G_OBJECT (new_widget), "special-child-type", NULL);
 
-  GWA_GET_CLASS (GTK_TYPE_CONTAINER)->replace_child (adaptor,
+  GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->replace_child (adaptor,
                                                      container,
                                                      current,
                                                      new_widget);
@@ -400,8 +400,8 @@ glade_hdy_header_bar_verify_property (GladeWidgetAdaptor *adaptor,
 {
   if (!strcmp (id, "size"))
     return verify_size (object, value);
-  else if (GWA_GET_CLASS (GTK_TYPE_CONTAINER)->verify_property)
-    return GWA_GET_CLASS (GTK_TYPE_CONTAINER)->verify_property (adaptor,
+  else if (GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->verify_property)
+    return GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->verify_property (adaptor,
                                                                 object,
                                                                 id,
                                                                 value);
@@ -446,7 +446,7 @@ GList *
 glade_hdy_header_bar_get_children (GladeWidgetAdaptor *adaptor,
                                    GObject            *container)
 {
-  GList *children = GWA_GET_CLASS (GTK_TYPE_CONTAINER)->get_children (adaptor, container);
+  GList *children = GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->get_children (adaptor, container);
 
   return g_list_sort_with_data (children, (GCompareDataFunc) sort_children, container);
 }
@@ -539,7 +539,7 @@ glade_hdy_header_bar_child_set_property (GladeWidgetAdaptor *adaptor,
 
   /* Chain Up */
   if (!is_position)
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
diff --git a/glade/glade-hdy-header-group.c b/glade/glade-hdy-header-group.c
index 3ef633e6..2366b7e0 100644
--- a/glade/glade-hdy-header-group.c
+++ b/glade/glade-hdy-header-group.c
@@ -76,7 +76,7 @@ glade_hdy_header_group_read_widget (GladeWidgetAdaptor *adaptor,
     return;
 
   /* First chain up and read in all the normal properties.. */
-  GWA_GET_CLASS (G_TYPE_OBJECT)->read_widget (adaptor, widget, node);
+  GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (G_TYPE_OBJECT)->read_widget (adaptor, widget, node);
 
   glade_hdy_header_group_read_widgets (widget, node);
 }
@@ -122,7 +122,7 @@ glade_hdy_header_group_write_widget (GladeWidgetAdaptor *adaptor,
     return;
 
   /* First chain up and read in all the normal properties.. */
-  GWA_GET_CLASS (G_TYPE_OBJECT)->write_widget (adaptor, widget, context, node);
+  GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (G_TYPE_OBJECT)->write_widget (adaptor, widget, context, node);
 
   glade_hdy_header_group_write_widgets (widget, context, node);
 }
@@ -156,7 +156,7 @@ glade_hdy_header_group_set_property (GladeWidgetAdaptor *adaptor,
                                          HDY_HEADER_BAR (list->data));
     }
   } else {
-    GWA_GET_CLASS (G_TYPE_OBJECT)->set_property (adaptor, object,
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (G_TYPE_OBJECT)->set_property (adaptor, object,
                                                  property_name, value);
   }
 }
diff --git a/glade/glade-hdy-leaflet.c b/glade/glade-hdy-leaflet.c
index 4032f9f2..90deb3f9 100644
--- a/glade/glade-hdy-leaflet.c
+++ b/glade/glade-hdy-leaflet.c
@@ -227,7 +227,7 @@ glade_hdy_leaflet_child_action_activate (GladeWidgetAdaptor *adaptor,
 
     glade_command_pop_group ();
   } else {
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_action_activate (adaptor,
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_action_activate (adaptor,
                                                                container,
                                                                object,
                                                                action_path);
@@ -332,7 +332,7 @@ glade_hdy_leaflet_set_property (GladeWidgetAdaptor *adaptor,
   else if (!strcmp (id, "page"))
     set_page (object, value);
   else
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->set_property (adaptor, object, id, value);
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->set_property (adaptor, object, id, value);
 }
 
 void
@@ -348,7 +348,7 @@ glade_hdy_leaflet_get_property (GladeWidgetAdaptor *adaptor,
     g_value_reset (value);
     g_value_set_int (value, get_page (GTK_CONTAINER (object)));
   } else {
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->get_property (adaptor, object, id, value);
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->get_property (adaptor, object, id, value);
   }
 }
 
@@ -397,8 +397,8 @@ glade_hdy_leaflet_verify_property (GladeWidgetAdaptor *adaptor,
     return verify_n_pages (object, value);
   else if (!strcmp (id, "page"))
     return verify_page (object, value);
-  else if (GWA_GET_CLASS (GTK_TYPE_CONTAINER)->verify_property)
-    return GWA_GET_CLASS (GTK_TYPE_CONTAINER)->verify_property (adaptor, object, id, value);
+  else if (GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->verify_property)
+    return GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->verify_property (adaptor, object, id, value);
 
   return TRUE;
 }
@@ -415,7 +415,7 @@ glade_hdy_leaflet_get_child_property (GladeWidgetAdaptor *adaptor,
     g_value_set_int (value, glade_hdy_get_child_index (GTK_CONTAINER (container),
                                                        GTK_WIDGET (child)));
   else
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_get_property (adaptor,
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_get_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
@@ -436,7 +436,7 @@ glade_hdy_leaflet_set_child_property (GladeWidgetAdaptor *adaptor,
 
     glade_hdy_sync_child_positions (GTK_CONTAINER (container));
   } else {
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
diff --git a/glade/glade-hdy-preferences-page.c b/glade/glade-hdy-preferences-page.c
index f1a62c7e..58c1d3a5 100644
--- a/glade/glade-hdy-preferences-page.c
+++ b/glade/glade-hdy-preferences-page.c
@@ -169,7 +169,7 @@ glade_hdy_preferences_page_action_activate (GladeWidgetAdaptor *adaptor,
 
     glade_command_pop_group ();
   } else {
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->action_activate (adaptor,
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->action_activate (adaptor,
                                                          object,
                                                          action_path);
   }
@@ -188,7 +188,7 @@ glade_hdy_preferences_page_child_set_property (GladeWidgetAdaptor *adaptor,
     gtk_container_child_set_property (GTK_CONTAINER (parent),
                                       GTK_WIDGET (child), property_name, value);
   } else {
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
@@ -209,7 +209,7 @@ glade_hdy_preferences_page_child_get_property (GladeWidgetAdaptor *adaptor,
     gtk_container_child_get_property (GTK_CONTAINER (parent),
                                       GTK_WIDGET (child), property_name, value);
   } else {
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_get_property (adaptor,
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_get_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
diff --git a/glade/glade-hdy-preferences-window.c b/glade/glade-hdy-preferences-window.c
index 1add3690..adc7dea6 100644
--- a/glade/glade-hdy-preferences-window.c
+++ b/glade/glade-hdy-preferences-window.c
@@ -237,7 +237,7 @@ glade_hdy_preferences_window_action_activate (GladeWidgetAdaptor *adaptor,
 
     glade_command_pop_group ();
   } else {
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->action_activate (adaptor,
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->action_activate (adaptor,
                                                          object,
                                                          action_path);
   }
@@ -256,7 +256,7 @@ glade_hdy_preferences_window_child_set_property (GladeWidgetAdaptor *adaptor,
     gtk_container_child_set_property (GTK_CONTAINER (parent),
                                       GTK_WIDGET (child), property_name, value);
   } else {
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_set_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
@@ -277,7 +277,7 @@ glade_hdy_preferences_window_child_get_property (GladeWidgetAdaptor *adaptor,
     gtk_container_child_get_property (GTK_CONTAINER (parent),
                                       GTK_WIDGET (child), property_name, value);
   } else {
-    GWA_GET_CLASS (GTK_TYPE_CONTAINER)->child_get_property (adaptor,
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (GTK_TYPE_CONTAINER)->child_get_property (adaptor,
                                                             container,
                                                             child,
                                                             property_name,
diff --git a/glade/glade-hdy-swipe-group.c b/glade/glade-hdy-swipe-group.c
index 059138dd..22ad7fd9 100644
--- a/glade/glade-hdy-swipe-group.c
+++ b/glade/glade-hdy-swipe-group.c
@@ -78,7 +78,7 @@ glade_hdy_swipe_group_read_widget (GladeWidgetAdaptor *adaptor,
     return;
 
   /* First chain up and read in all the normal properties.. */
-  GWA_GET_CLASS (G_TYPE_OBJECT)->read_widget (adaptor, widget, node);
+  GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (G_TYPE_OBJECT)->read_widget (adaptor, widget, node);
 
   glade_hdy_swipe_group_read_widgets (widget, node);
 }
@@ -122,7 +122,7 @@ glade_hdy_swipe_group_write_widget (GladeWidgetAdaptor *adaptor,
     return;
 
   /* First chain up and read in all the normal properties.. */
-  GWA_GET_CLASS (G_TYPE_OBJECT)->write_widget (adaptor, widget, context, node);
+  GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (G_TYPE_OBJECT)->write_widget (adaptor, widget, context, node);
 
   glade_hdy_swipe_group_write_widgets (widget, context, node);
 }
@@ -155,7 +155,7 @@ glade_hdy_swipe_group_set_property (GladeWidgetAdaptor *adaptor,
                                        HDY_SWIPEABLE (list->data));
     }
   } else {
-    GWA_GET_CLASS (G_TYPE_OBJECT)->set_property (adaptor, object,
+    GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS (G_TYPE_OBJECT)->set_property (adaptor, object,
                                                  property_name, value);
   }
 }
diff --git a/glade/glade-hdy-utils.h b/glade/glade-hdy-utils.h
index 11870d15..2a593d70 100644
--- a/glade/glade-hdy-utils.h
+++ b/glade/glade-hdy-utils.h
@@ -21,6 +21,14 @@
 #define glade_widget_action_get_def glade_widget_action_get_class
 #endif
 
+/*
+ * Another macro got renamed in GladeUI 3.38. For older versions of GladeUI,
+ * define the new macro as the old one.
+ */
+#ifndef GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS
+#define GLADE_WIDGET_ADAPTOR_GET_ADAPTOR_CLASS GWA_GET_CLASS
+#endif
+
 void glade_hdy_init (const gchar *name);
 
 void glade_hdy_sync_child_positions (GtkContainer *container);
-- 
GitLab

